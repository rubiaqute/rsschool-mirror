(()=>{"use strict";var __webpack_modules__={21:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(667);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);\n// Imports\n\n\n\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(917), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(/* asset import */ __webpack_require__(953), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(/* asset import */ __webpack_require__(195), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_3___ = new URL(/* asset import */ __webpack_require__(873), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_4___ = new URL(/* asset import */ __webpack_require__(856), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_5___ = new URL(/* asset import */ __webpack_require__(76), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_6___ = new URL(/* asset import */ __webpack_require__(519), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_7___ = new URL(/* asset import */ __webpack_require__(197), __webpack_require__.b);\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_3___);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_4___);\nvar ___CSS_LOADER_URL_REPLACEMENT_5___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_5___);\nvar ___CSS_LOADER_URL_REPLACEMENT_6___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_6___);\nvar ___CSS_LOADER_URL_REPLACEMENT_7___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_7___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ".category img{opacity:85%}.hide,.settings,.back,.categories-icon,.game-select,.game-select:hover,.score:hover,.options:hover,.container-settings,.container-settings.loaded,.switch-button::after,.button-settings:hover{transition:0.5s}.options,.options.loaded{transition:0.5s ease-out}h2,h3,h4,h5,.category .number,.score p,.timer,.options,.description,.note,.note-result,.next-question,.final-modal-button,.results-header_score,.header,.button-settings,.github-link{font-family:\\"Roboto\\", sans-serif}.categories,.categories.visually-hidden,.container-question .image-question.loaded{transition:1.5s ease-out}.container-results.loaded{transition:1s ease-out}@keyframes bounce{0%{transform:translateY(0)}50%{transform:translateY(-10%)}100%{transform:translateY(0)}}@keyframes escape-rotating{0%{opacity:0;transform:rotateY(-60deg)}25%{opacity:1;transform:rotateY(-45deg)}75%{opacity:1;transform:rotateY(-15deg)}100%{opacity:1;transform:rotateY(0deg)}}*{scroll-behavior:smooth;box-sizing:border-box;margin:0;padding:0;border:0}button{cursor:pointer}button::-moz-focus-inner{padding:0;border:0}a,a:visited{text-decoration:none}a:hover{text-decoration:none}ul li{list-style:none}img{vertical-align:top}html{font-size:10px}@media (min-width: 768px){html{font-size:15px}}@media (min-width: 1024px){html{font-size:20px}}.wrapper{background:url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ") no-repeat;background-size:cover;background-position:center;position:relative}.container{margin:0 auto;padding:25vh 10% 5vh 10%;height:100vh;max-height:100vh}.hide{display:none}.volume-range{background:linear-gradient(to right, #ffbca2 0%, #ffbca2 40%, rgba(80,80,80,0.5) 40%, rgba(80,80,80,0.5) 100%);border:none;outline:none;-webkit-appearance:none;height:1rem;width:80%}.volume-range::-webkit-slider-thumb{width:1.5rem;height:1.5rem;border-radius:50%;-webkit-appearance:none;cursor:pointer;background:#ffbca2}h2{background-color:transparent;color:#fff;font-size:2.4rem;line-height:2.8rem;font-weight:500;font-style:normal;text-transform:uppercase;width:100%;text-align:center}h3{font-size:2.4rem;line-height:2.8rem;font-weight:500;font-style:normal;text-transform:normal;color:#fff;text-align:center;margin-bottom:5%}h4{font-size:2.2rem;line-height:2.4rem;font-weight:500;font-style:normal;text-transform:normal;color:#fff;text-align:center;margin-bottom:5%}h5{font-size:2.2rem;line-height:2.4rem;font-weight:500;font-style:normal;text-transform:normal;color:#fff;text-align:center;margin-bottom:5%}@media (min-width: 520px){h5{margin-bottom:1%}}.settings{background:url(" + ___CSS_LOADER_URL_REPLACEMENT_1___ + ") no-repeat;background-position:top right;width:2.4rem;height:2.4rem;position:absolute;top:2%;right:5%;z-index:1}@media (min-width: 520px){.settings{background-size:70%}}.settings:hover{transform:rotate(-120deg);cursor:pointer}.back{position:absolute;width:2.4rem;height:2.4rem;z-index:1;background:url(" + ___CSS_LOADER_URL_REPLACEMENT_2___ + ") no-repeat;background-position:top left;top:2%;left:5%}@media (min-width: 520px){.back{background-size:70%}}.back:hover{cursor:pointer;opacity:60%}.categories-icon{position:absolute;width:2.4rem;height:2.4rem;z-index:1;background:url(" + ___CSS_LOADER_URL_REPLACEMENT_3___ + ") no-repeat;background-position:top center;top:2%;left:50%}@media (min-width: 520px){.categories-icon{background-size:70%}}.categories-icon:hover{cursor:pointer;opacity:60%}.volume .icon{background:url(" + ___CSS_LOADER_URL_REPLACEMENT_4___ + ") no-repeat;width:2rem;height:2rem}@media (min-width: 520px){.volume .icon{background-size:70%}}.icon-wrong{background:url(" + ___CSS_LOADER_URL_REPLACEMENT_5___ + ") no-repeat;width:4.8rem;height:4.8rem}@media (min-width: 520px){.icon-wrong{background-size:70%}}.icon-right{background:url(" + ___CSS_LOADER_URL_REPLACEMENT_6___ + ") no-repeat;width:4.8rem;height:4.8rem}@media (min-width: 520px){.icon-right{background-size:70%}}.logo{background:url(" + ___CSS_LOADER_URL_REPLACEMENT_7___ + ") no-repeat;background-position:center;width:100%;height:20vh;margin:auto}@media (min-width: 520px){.logo{background-size:20%}}.game-select{width:100%;margin:5vh auto;padding-top:5vh;padding-bottom:5vh;border:1px solid #fff;border-radius:56px}.game-select:hover{cursor:pointer;background-color:#ffbca2;opacity:40%}.game-select:hover h2{color:#000}.categories{padding:5% 10%;margin:0 auto;width:100%;transform:translateY(0);display:block}.categories.hidden{display:none}.categories.visually-hidden{transform:translateY(100%)}.categories_container{width:100%;display:flex;justify-content:space-between;row-gap:5%;flex-wrap:wrap}.category{width:45%;border:1px solid #fff;position:relative;border-radius:5%}@media (min-width: 520px){.category{width:30%}}@media (min-width: 1024px){.category{width:22%}}.category .number{font-size:2.4rem;line-height:2.8rem;font-weight:bold;font-style:normal;text-transform:uppercase;color:#fff;box-shadow:5px 5px 10px rgba(0,0,0,0.5);z-index:1;position:absolute;top:45%;left:5%;text-align:center}.category img{display:block;width:100%;border-radius:5%}.category img:hover{cursor:pointer;opacity:60%}.category img.not-colored{filter:grayscale(80%)}.score{position:absolute;width:100%;max-width:50%;background:#6e0707;border:1px solid #fff;border-radius:5%;bottom:0;right:0}.score p{font-size:1.2rem;line-height:1.4rem;font-weight:500;font-style:normal;text-transform:normal;color:#fff;text-align:center}.score:hover{cursor:pointer;transform:scale(1.1)}.score.best-score{background:#135810}.container-question{overflow-y:hidden;width:100%;height:100vh;padding:5%;position:relative;text-align:center}.container-question img{width:100%;max-width:100%;border:1px solid #fff;border-radius:5%}.container-question .image-question{transform:scale(0)}@media (min-width: 520px){.container-question .image-question{width:30%}}@media (min-width: 1024px){.container-question .image-question{width:30%}}.container-question .image-question.loaded{transform:scale(1)}@media (min-width: 520px){.container-question-image{display:flex;justify-content:space-between;column-gap:2%}}.timer{position:absolute;top:2%;right:3%;width:15%;color:#fff;font-size:1.4rem;line-height:1.4rem;font-weight:500;font-style:normal;text-transform:normal}.bullets{width:100%;height:10vh;display:flex;justify-content:space-between;align-items:flex-end;padding-top:10vh;margin-bottom:5vh}.bullets .bullet{width:1rem;height:1rem;border-radius:50%;border:1px solid #fff}.bullets .bullet.wrong{background-color:#6e0707}.bullets .bullet.right{background-color:#135810}.container-options{display:flex;flex-wrap:wrap;justify-content:space-between;row-gap:10px;margin-bottom:5vh;margin-top:3vh}.options{width:45%;border:1px solid #fff;border-radius:5%;font-size:1.4rem;line-height:1.8rem;font-weight:500;font-style:normal;text-transform:normal;color:#fff;justify-content:center;display:flex;align-items:center;transform:scale(0)}.options.right{background-color:#135810}.options.wrong{background-color:#6e0707}.options.loaded{transform:scale(1)}.options:hover{cursor:pointer;opacity:0.8}@media (min-width: 520px){.options.image-type-options{width:22%}}.container-question.hide{display:none}.overlay{position:fixed;top:0;left:0;width:100%;height:100%;background-color:rgba(80,80,80,0.5);display:flex;align-items:center;justify-content:center;z-index:1}.modal-container{position:relative;overflow-y:hidden;width:70%;max-height:80%;min-height:50%;border:1px solid #fff;background-color:#000;display:flex;flex-direction:column;justify-content:space-between;align-items:center;border-radius:5%;box-shadow:5px 5px 10px rgba(0,0,0,0.5);padding:5%;opacity:0;animation:escape-rotating 0.5s 1 ease-in}.modal-container.animated{opacity:1}.image-answer{max-width:50%;width:100%;border:1px solid #fff;border-radius:5%}.image-answer.big{max-width:70%}@media (min-width: 520px){.image-answer.big{max-width:50%}}@media (min-width: 520px){.image-answer{width:30%}}@media (min-width: 1024px){.image-answer{width:30%}}.container-answer{max-width:100%;width:100%;display:flex;align-items:center;justify-content:space-between}.container-picture-modal{max-width:100%;width:100%;display:flex;flex-direction:column;align-items:center}.container-description{display:flex;flex-direction:column;justify-content:space-between;padding:2%}@media (min-width: 1024px){.container-description{width:50%;row-gap:2%}}.description{font-size:1.4rem;line-height:1.4rem;font-weight:500;font-style:normal;text-transform:normal;color:#fff;text-align:left}.note{font-size:2.2rem;line-height:2.4rem;font-weight:500;font-style:normal;text-transform:normal;color:#fff;text-align:center}.note span{color:#ffbca2}.note-result{font-size:1.4rem;line-height:1.6rem;font-weight:500;font-style:normal;text-transform:normal;color:#fff;text-align:center}.next-question{border-radius:56px;width:30%;border-radius:5%;background-color:#ffbca2;color:#000;padding:2%;font-size:1.8rem;line-height:2rem;font-weight:700;font-style:normal;text-transform:normal}.next-question.results{width:45%;text-align:center}.next-question:hover{cursor:pointer;opacity:70%}.results-modal_buttons{display:flex;width:100%;justify-content:space-around}.final-modal-button{border-radius:56px;width:100%;max-width:60%;border-radius:56px;background-color:#ffbca2;color:#000;padding:2%;font-size:1.8rem;line-height:2rem;font-weight:700;font-style:normal;text-transform:normal}@media (min-width: 520px){.final-modal-button{padding:1%;font-size:1.4rem;line-height:1.4rem;font-weight:700;font-style:normal;text-transform:normal;border-radius:1px solid #fff}}.image-result{max-width:50%;width:100%;border-radius:1px solid #fff;border-radius:5%}@media (min-width: 520px){.image-result{width:30%}}.container-results{height:100vh;padding:15% 5% 5% 5%;transform:translateY(-150%)}.container-results.loaded{transform:translateY(0)}@media (min-width: 520px){.container-results{padding:10% 5% 5% 5%}}@media (min-width: 1024px){.container-results{padding:5% 5% 5% 5%}}.results-header_score{font-size:1.6rem;line-height:1.8rem;font-weight:500;font-style:normal;text-transform:normal;color:#fff;text-align:center;margin-bottom:5%}@media (min-width: 520px){.results-header_score{margin-bottom:1%}}.images-results{display:flex;flex-wrap:wrap;width:100%;justify-content:space-between;row-gap:3%}.images-results .image-results{max-width:30%;border-radius:50%}@media (min-width: 520px){.images-results .image-results{max-width:18%}}.images-results .image-results.colored{border:5px solid #135810}.images-results .image-results.black-white{border:5px solid #6e0707}.images-results .image-results:hover{cursor:pointer;animation:bounce 0.5s 1 ease}.images-results .image-results img{width:100%;border-radius:50%}.images-results .image-results img.black-white{filter:grayscale(100%)}.container-settings{height:100vh;padding:5%;padding-top:5vh;padding-bottom:5vh;display:flex;flex-direction:column;justify-content:space-between;background:rgba(80,80,80,0.5);transform:translateX(-150%)}.container-settings.hidden{display:none}.container-settings.loaded{transform:translateX(0)}.sound,.music,.time-mode{width:100%;display:flex;justify-content:space-between}.toggle{width:40%;display:flex;justify-content:space-between}@media (min-width: 520px){.toggle{width:30%}}@media (min-width: 1024px){.toggle{width:20%}}.header{font-size:1.4rem;line-height:2rem;font-weight:500;font-style:normal;text-transform:normal;color:#fff;text-align:left;display:flex;align-items:flex-end}.switch-button{display:block;width:5rem;height:2rem;border-radius:19px;background:rgba(59,58,58,0.8);z-index:0;margin:0;padding:0;border:none;cursor:pointer;position:relative;transition-duration:300ms}.switch-button::after{content:\\"\\";height:1.5rem;width:1.5rem;border-radius:17px;background:#fff;top:0.2rem;left:0.2rem;position:absolute;z-index:1}.switch-on{background:#ffbca2}.switch-on::after{left:3.3rem}.volume{display:flex;justify-content:space-between;width:50%;align-items:center}.volume .sound-volume,.volume .music-volume{width:80%}.selection{display:flex;justify-content:space-between;margin-top:2%}.music-select,.time-select{display:inline-block;outline:none;border:1px solid #ffbca2;border-radius:5px;width:50%}.music-select:hover,.time-select:hover{cursor:pointer;opacity:80%}.time-mode_toggle{display:flex;justify-content:space-between;width:40%}@media (min-width: 520px){.time-mode_toggle{width:30%}}@media (min-width: 1024px){.time-mode_toggle{width:20%}}.button-settings{max-width:50%;white-space:nowrap;background:transparent;border:1px solid #fff;color:#fff;text-align:center;vertical-align:center;border-radius:56px;padding:3%;font-size:1.4rem;line-height:1.4rem;font-weight:500;font-style:normal;text-transform:normal}.button-settings:hover{color:#000;background-color:#ffbca2;opacity:80%;border:1px solid #ffbca2}.save-buttons{width:100%;text-align:center}.github-link{width:90%;position:absolute;bottom:2%;max-height:10%;display:flex;justify-content:space-between;color:rgba(80,80,80,0.5);right:5%;left:5%;font-size:1.4rem;line-height:1.4rem;font-weight:500;font-style:normal;text-transform:normal}.github-link a{text-decoration:none}.github-link a:hover,.github-link a:active,.github-link a:visited{text-decoration:none;color:rgba(80,80,80,0.5);cursor:pointer}.school-icon{width:5rem;background-color:rgba(80,80,80,0.5);border-radius:3px;opacity:70%}.school-icon:hover{opacity:100%;cursor:pointer}\\n", ""]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://art-quiz/./src/sass/style.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/resolve-url-loader/index.js!./node_modules/sass-loader/dist/cjs.js??ruleSet%5B1%5D.rules%5B0%5D.use%5B3%5D')},645:module=>{eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = "";\n      var needLayer = typeof item[5] !== "undefined";\n\n      if (item[4]) {\n        content += "@supports (".concat(item[4], ") {");\n      }\n\n      if (item[2]) {\n        content += "@media ".concat(item[2], " {");\n      }\n\n      if (needLayer) {\n        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += "}";\n      }\n\n      if (item[2]) {\n        content += "}";\n      }\n\n      if (item[4]) {\n        content += "}";\n      }\n\n      return content;\n    }).join("");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === "string") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== "undefined") {\n        if (typeof item[5] === "undefined") {\n          item[5] = layer;\n        } else {\n          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = "".concat(supports);\n        } else {\n          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\n//# sourceURL=webpack://art-quiz/./node_modules/css-loader/dist/runtime/api.js?')},667:module=>{eval('\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  }\n\n  url = String(url.__esModule ? url.default : url); // If url is already wrapped in quotes, remove them\n\n  if (/^[\'"].*[\'"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n\n  if (options.hash) {\n    url += options.hash;\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/["\'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return "\\"".concat(url.replace(/"/g, \'\\\\"\').replace(/\\n/g, "\\\\n"), "\\"");\n  }\n\n  return url;\n};\n\n//# sourceURL=webpack://art-quiz/./node_modules/css-loader/dist/runtime/getUrl.js?')},81:module=>{eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://art-quiz/./node_modules/css-loader/dist/runtime/noSourceMaps.js?")},379:module=>{eval('\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://art-quiz/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?')},569:module=>{eval('\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://art-quiz/./node_modules/style-loader/dist/runtime/insertBySelector.js?')},216:module=>{eval('\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement("style");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://art-quiz/./node_modules/style-loader/dist/runtime/insertStyleElement.js?')},565:(module,__unused_webpack_exports,__webpack_require__)=>{eval('\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n\n  if (nonce) {\n    styleElement.setAttribute("nonce", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://art-quiz/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?')},795:module=>{eval('\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = "";\n\n  if (obj.supports) {\n    css += "@supports (".concat(obj.supports, ") {");\n  }\n\n  if (obj.media) {\n    css += "@media ".concat(obj.media, " {");\n  }\n\n  var needLayer = typeof obj.layer !== "undefined";\n\n  if (needLayer) {\n    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += "}";\n  }\n\n  if (obj.media) {\n    css += "}";\n  }\n\n  if (obj.supports) {\n    css += "}";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://art-quiz/./node_modules/style-loader/dist/runtime/styleDomAPI.js?')},589:module=>{eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://art-quiz/./node_modules/style-loader/dist/runtime/styleTagTransform.js?")},706:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval("\n;// CONCATENATED MODULE: ./src/js/interface.js\nclass Interface {\n  constructor() {\n    this.game = document.querySelector('.wrapper');\n    this.backButton = document.querySelector('.back');\n    this.categoryButton = document.querySelector('.categories-icon');\n    this.settingsButton = document.querySelector('.settings');\n    this.gameSelector = document.querySelectorAll('.game-select');\n  }\n\n  static async createModalWrapper() {\n    const modalContainer = Interface.createNodetoDom('div', 'modal-container');\n    // modalContainer.innerHTML = await template;\n    const overlay = Interface.createNodetoDom('div', 'overlay');\n    await overlay.append(modalContainer);\n    new Interface().game.append(overlay);\n    setTimeout(() => modalContainer.classList.add('animated'), 500);\n    return modalContainer;\n  }\n\n  static createNodetoDom(element, ...classes) {\n    const node = document.createElement(element);\n    node.className = classes;\n    return node;\n  }\n\n  static appearStartPage() {\n    const startPage = document.querySelector('.container');\n    startPage.classList.remove('hide');\n  }\n\n  static appearSettings() {\n    const settingsPage = document.querySelector('.container-settings');\n    settingsPage.classList.remove('hidden');\n    setTimeout(() => settingsPage.classList.add('loaded'), 100);\n  }\n\n  static hideCategories() {\n    const containerCategory = document.querySelectorAll('.categories');\n    containerCategory.forEach((el) => el.classList.add('hidden', 'visually-hidden'));\n  }\n\n  static hideSettings() {\n    const settingsPage = document.querySelector('.container-settings');\n    settingsPage.classList.remove('loaded');\n    settingsPage.classList.add('hidden');\n  }\n\n  static hideStartPage() {\n    const startPage = document.querySelector('.container');\n    startPage.classList.add('hide');\n  }\n\n  static appearBackIcon() {\n    new Interface().backButton.classList.remove('hide');\n  }\n\n  static hideBackIcon() {\n    new Interface().backButton.classList.add('hide');\n  }\n\n  static appearSettingsIcon() {\n    new Interface().settingsButton.classList.remove('hide');\n  }\n\n  static hideSettingsIcon() {\n    new Interface().settingsButton.classList.add('hide');\n  }\n\n  static appearCategories(type) {\n    const containerCategory = document.querySelector(`.${type}`);\n    containerCategory.classList.remove('hidden');\n    setTimeout(() => containerCategory.classList.remove('visually-hidden'));\n  }\n\n  static appearCategoryIcon(id) {\n    new Interface().categoryButton.classList.remove('hide');\n    if (id > 11) new Interface().categoryButton.classList.add('paintings-type');\n    else new Interface().categoryButton.classList.add('artists-type');\n  }\n\n  static hideCategoryIcon() {\n    new Interface().categoryButton.classList.add('hide');\n    new Interface().categoryButton.classList.remove('paintings-type', 'artists-type');\n  }\n\n  static appearQuizPage() {\n    const quizPage = document.querySelector('.container-question');\n    quizPage.classList.remove('hide');\n  }\n\n  static eliminateQuizPage() {\n    const quizPage = document.querySelector('.container-question');\n    if (quizPage) new Interface().game.removeChild(quizPage);\n  }\n\n  static eliminateResultsPage() {\n    const resultsPage = document.querySelector('.container-results');\n    if (resultsPage) new Interface().game.removeChild(resultsPage);\n  }\n\n  static eliminateModal() {\n    const overlay = document.querySelector('.overlay');\n    if (overlay) new Interface().game.removeChild(overlay);\n  }\n\n  static showStartPage() {\n    Interface.appearStartPage();\n    Interface.hideCategories();\n    Interface.hideBackIcon();\n    Interface.hideCategoryIcon();\n    Interface.eliminateQuizPage();\n    Interface.eliminateResultsPage();\n    Interface.hideSettings();\n    Interface.appearSettingsIcon();\n  }\n\n  static showCategories(type) {\n    Interface.hideStartPage();\n    Interface.appearCategories(type);\n    Interface.appearBackIcon();\n    Interface.hideCategoryIcon();\n    Interface.eliminateQuizPage();\n    Interface.eliminateResultsPage();\n    Interface.hideSettingsIcon();\n    // Interface.appearSettingsIcon();\n  }\n\n  static showQuestion(id) {\n    Interface.appearBackIcon();\n    Interface.appearCategoryIcon(id);\n    Interface.hideStartPage();\n    Interface.hideCategories();\n    Interface.hideSettingsIcon();\n  }\n\n  static showSettings() {\n    Interface.appearBackIcon();\n    Interface.hideStartPage();\n    Interface.hideCategories();\n    Interface.hideCategoryIcon();\n    Interface.appearSettings();\n    Interface.hideSettingsIcon();\n  }\n}\nnew Interface().backButton.addEventListener('click', () => {\n  Interface.showStartPage();\n});\nnew Interface().categoryButton.addEventListener('click', () => {\n  if (new Interface().categoryButton.classList.contains('artists-type')) { Interface.showCategories('artists'); } else Interface.showCategories('paintings');\n});\nnew Interface().settingsButton.addEventListener('click', () => {\n  Interface.showSettings();\n});\n\nnew Interface().gameSelector.forEach((el) => {\n  el.addEventListener('click', (e) => {\n    e.preventDefault();\n    if (e.target.closest('.artists-quiz')) Interface.showCategories('artists');\n    else Interface.showCategories('paintings');\n  });\n});\n\n;// CONCATENATED MODULE: ./src/js/questions.js\nclass Questions {\n  constructor(id) {\n    this.index = id;\n  }\n\n  async makeQuestion() {\n    let questionText;\n    if (this.index < 120) {\n      const name = await new Questions(this.index).getName();\n      questionText = `Who is the author of \"${name}\"?`;\n    } else {\n      const author = await new Questions(this.index).getAuthor();\n      questionText = `Which picture was made by ${author}?`;\n    }\n    return questionText;\n  }\n\n  async makeOptions() {\n    const optionsAuthors = [];\n    const optionsImg = [];\n    const author = await new Questions(this.index).getAuthor();\n    const imageSrc = new Questions(this.index).getImageSrc();\n    optionsAuthors.push(author);\n    optionsImg.push(imageSrc);\n    /* eslint-disable no-await-in-loop */\n    for (let i = 0; i < 3; i += 1) {\n      let fakeAuthor;\n      let fakeImageSrc;\n      do {\n        let fakeId;\n        do {\n          fakeId = Math.round(Math.random() * 240);\n        } while (fakeId === this.index);\n        fakeAuthor = await new Questions(fakeId).getAuthor();\n        fakeImageSrc = new Questions(fakeId).getImageSrc();\n      } while (optionsAuthors.includes(fakeAuthor));\n      optionsAuthors.push(fakeAuthor);\n      optionsImg.push(fakeImageSrc);\n    }\n    /* eslint-enable no-await-in-loop */\n    let shuffledOptions;\n    if (this.index < 120) shuffledOptions = Questions.shuffle(optionsAuthors);\n    else shuffledOptions = Questions.shuffle(optionsImg);\n    return shuffledOptions;\n  }\n\n  async getRightAnswer() {\n    const author = await new Questions(this.index).getAuthor();\n    return author;\n  }\n\n  static async getImageData() {\n    const images = './assets/image-data/image_data.json';\n    const res = await fetch(images);\n    const data = await res.json();\n    await data;\n    return data;\n  }\n\n  getImageSrc() {\n    const src = `./assets/image-data/img/${this.index}.jpg`;\n    return src;\n  }\n\n  async getName() {\n    const data = await Questions.getImageData();\n    await data.images[this.index].name;\n    return data.images[this.index].name;\n  }\n\n  async getAuthor() {\n    const data = await Questions.getImageData();\n    await data.images[this.index].author;\n    return data.images[this.index].author;\n  }\n\n  async getYear() {\n    const data = await Questions.getImageData();\n    await data.images[this.index].year;\n    return data.images[this.index].year;\n  }\n\n  static shuffle(array) {\n    array.sort(() => Math.random() - 0.5);\n    return array;\n  }\n}\n\n;// CONCATENATED MODULE: ./src/js/results.js\n\n\n\nclass Results {\n  constructor(indexCategory) {\n    this.index = indexCategory;\n    this.results = Results.getResultsfromLocalStorage();\n  }\n\n  static getResultsfromLocalStorage() {\n    let resultsLocalStorage;\n    if (localStorage.getItem('resultsRubiaqute')) {\n      resultsLocalStorage = JSON.parse(localStorage.getItem('resultsRubiaqute'));\n      return Results.rewriteResults(resultsLocalStorage);\n    } return Results.rewriteResults([]);\n  }\n\n  static cleanResults() {\n    localStorage.removeItem('resultsRubiaqute');\n    window.location.reload();\n  }\n\n  checkResults() {\n    if (this.results) return this.results[this.index];\n    return null;\n  }\n\n  changeResults(array) {\n    this.results[this.index] = array;\n  }\n\n  static rewriteResults(array) {\n    this.results = array;\n    return this.results;\n  }\n\n  static returnResults() {\n    return this.results;\n  }\n\n  async makeResultsPage() {\n    const resultsContainer = Interface.createNodetoDom('div', 'container-results');\n    let template = '';\n    const score = this.results[this.index].filter((el) => el === 'right').length;\n    if (this.index < 12) {\n      template += `<div class=\"results-header\"><h5>Round ${\n        this.index + 1\n      }</h5><p class=\"results-header_score\">Your score: ${score}/10</p></div>`;\n    } else {\n      template += `<div class=\"results-header\"><h5>Round ${\n        this.index + 1 - 12\n      }</h5><p class=\"results-header_score\">Your score: ${score}/10</p></div>`;\n    }\n    resultsContainer.innerHTML = template;\n    const imgContainer = Interface.createNodetoDom('div', 'images-results');\n    resultsContainer.append(imgContainer);\n    for (let i = 0; i < 10; i += 1) {\n      const imageSrc = new Questions(this.index * 10 + i).getImageSrc();\n      let imageClass;\n      if (this.results[this.index][i] === 'right') imageClass = 'colored';\n      else imageClass = 'black-white';\n      const imgBordered = Interface.createNodetoDom('div', `image-results ${imageClass}`);\n      const img = new Image();\n      img.src = imageSrc;\n      img.classList.add(`${imageClass}`);\n      img.alt = '';\n      img.onload = () => {\n        imgBordered.append(img);\n      };\n      imgContainer.append(imgBordered);\n    }\n    new Interface().game.append(resultsContainer);\n    const imageResults = document.querySelectorAll('.image-results');\n    setTimeout(() => {\n      resultsContainer.classList.add('loaded');\n    }, 500);\n    imageResults.forEach((el, id) => el.addEventListener('click', () => {\n      new Results(this.index).makePictureModal(id);\n    }));\n  }\n\n  async makePictureModal(id) {\n    let template = '';\n    const imageSrc = new Questions(this.index * 10 + id).getImageSrc();\n    const author = await new Questions(this.index * 10 + id).getAuthor();\n    const name = await new Questions(this.index * 10 + id).getName();\n    const year = await new Questions(this.index * 10 + id).getYear();\n    const modalPage = await Interface.createModalWrapper();\n    const imageResultsModal = new Image();\n    imageResultsModal.alt = '';\n    imageResultsModal.src = `${imageSrc}`;\n    await imageResultsModal.decode();\n    modalPage.append(imageResultsModal);\n    imageResultsModal.className = 'image-answer big';\n    template += '<div class=\"container-description\">';\n    template += `<p class=\"description\">${author}</p>`;\n    template += `<p class=\"description\">\"${name}\"</p>`;\n    template += `<p class=\"description\">${year}</p>`;\n    template += '</div>';\n    template += '<div class=\"results-modal_buttons\">';\n    template += `<a class=\"next-question results\" target=\"_blank\" href=\"${imageSrc}\" download>Download</a>`;\n    template += '<button class=\"next-question results close\">Close</button>';\n    template += '</div>';\n    modalPage.insertAdjacentHTML('beforeend', template);\n    const closeButton = document.querySelector('.next-question.results.close');\n    closeButton.addEventListener('click', () => Interface.eliminateModal());\n    const overlay = document.querySelector('.overlay');\n    overlay.addEventListener('mousedown', (e) => {\n      if (e.target.closest('.modal-container') === null) { Interface.eliminateModal(); }\n    });\n  }\n}\n\n;// CONCATENATED MODULE: ./src/js/settings.js\n\n\nclass Settings {\n  constructor() {\n    this.settings = Settings.getSettingsfromLS();\n    this.settingsDefault = {\n      'sound-mode': 'true',\n      'music-mode': 'false',\n      'time-mode': 'false',\n      'volume-sound': '40',\n      'volume-music': '40',\n      'track-number': '0',\n      'time-left': '10',\n    };\n    this.switchers = document.querySelectorAll('.switch-button');\n    this.range = document.querySelectorAll('.volume-range');\n    this.musicSelection = document.querySelector('.music-select');\n    this.timeModeSelection = document.querySelector('.time-select');\n    this.defaultSettingsButton = document.querySelector('.default');\n    this.clearResultsButton = document.querySelector('.clean-results');\n  }\n\n  static setSettingstoLocalStorage() {\n    localStorage.setItem('settingsRubiaqute', JSON.stringify(this.settings));\n  }\n\n  static changeTimeModeTimeLeft() {\n    if (this.settings) {\n      this.settings['time-left'] = new Settings().timeModeSelection.value.toString();\n      Settings.setSettingstoLocalStorage();\n    }\n  }\n\n  static getSettingsfromLS() {\n    if (localStorage.getItem('settingsRubiaqute')) {\n      const settings = JSON.parse(localStorage.getItem('settingsRubiaqute'));\n      return settings;\n    } return {};\n  }\n\n  static playMusic() {\n    if (this.settings) {\n      const audio = document.querySelector('.audio-music');\n      const musicSelection = document.querySelector('.music-select');\n      const numberTrack = musicSelection.value;\n      this.settings['track-number'] = musicSelection.value.toString();\n      if (this.settings['music-mode'] === 'true') {\n        audio.src = `./assets/sounds/${numberTrack}.mp3`;\n        audio.volume = new Settings().range[1].value / 100;\n        audio.play();\n      }\n      Settings.setSettingstoLocalStorage();\n    }\n  }\n\n  static stopMusic() {\n    const audio = document.querySelector('.audio-music');\n    audio.pause();\n  }\n\n  static updateSettingsView(button, index) {\n    if (this.settings) {\n      let type;\n      if (index === 0) type = 'sound-mode';\n      if (index === 1) type = 'music-mode';\n      if (index === 2) type = 'time-mode';\n      if (this.settings[type] === 'true') button.classList.add('switch-on');\n      else button.classList.remove('switch-on');\n    }\n  }\n\n  static updateTrack() {\n    const musicSelection = document.querySelector('.music-select');\n    musicSelection.value = +this.settings['track-number'];\n  }\n\n  static updateTimeLeft() {\n    new Settings().timeModeSelection.value = Number(this.settings['time-left']);\n  }\n\n  static updateRanges(index) {\n    if (index === 0) new Settings().range[index].value = this.settings['volume-sound'];\n    else new Settings().range[index].value = this.settings['volume-music'];\n    const volumeValue = new Settings().range[index].value;\n    Settings.changeProgressColor(index, volumeValue);\n  }\n\n  static changeProgressColor(index, volumeValue) {\n    new Settings().range[index].style.background = `linear-gradient(to right, #FFBCA2 0%, #FFBCA2 ${volumeValue}%, rgba(80, 80, 80, 0.5) ${volumeValue}%, rgba(80, 80, 80, 0.5) 100%)`;\n  }\n\n  static switchSettings(button, index) {\n    if (this.settings) {\n      let type;\n      if (index === 0) type = 'sound-mode';\n      if (index === 1) type = 'music-mode';\n      if (index === 2) type = 'time-mode';\n      if (button.classList.contains('switch-on')) {\n        button.classList.remove('switch-on');\n        this.settings[type] = 'false';\n        if (index === 1) Settings.stopMusic();\n      } else {\n        button.classList.add('switch-on');\n        this.settings[type] = 'true';\n        if (index === 1) Settings.playMusic();\n      }\n      Settings.setSettingstoLocalStorage();\n    }\n  }\n\n  static changeVolume(rangeBar, index) {\n    if (this.settings) {\n      const audio = document.getElementsByTagName('audio');\n      audio[index].volume = rangeBar.value / 100;\n      if (index === 0) this.settings['volume-sound'] = rangeBar.value;\n      else this.settings['volume-music'] = rangeBar.value;\n      Settings.changeProgressColor(index, rangeBar.value);\n      Settings.setSettingstoLocalStorage();\n    }\n  }\n\n  static rewriteSettings(array) {\n    if (array) {\n      this.settings = { ...array };\n    } else this.settings = { ...this.settingsDefault };\n    return this.settings;\n  }\n\n  returnSettings() {\n    return this.settings;\n  }\n\n  static makeSettingsDefault() {\n    Settings.rewriteSettings(new Settings().settingsDefault);\n    Settings.setSettingstoLocalStorage();\n    Settings.updateSettingsPage();\n    window.location.reload();\n  }\n\n  static updateSettingsPage() {\n    new Settings().switchers.forEach((button, index) => Settings.updateSettingsView(button, index));\n    new Settings().range.forEach((el, index) => Settings.updateRanges(index));\n    Settings.updateTrack();\n    Settings.updateTimeLeft();\n  }\n}\nnew Settings().range.forEach((el, index) => el.addEventListener('change', () => Settings.changeVolume(el, index)));\nnew Settings().musicSelection.addEventListener('change', () => Settings.playMusic());\nnew Settings().timeModeSelection.addEventListener('change', () => Settings.changeTimeModeTimeLeft());\nnew Settings().defaultSettingsButton.addEventListener('click', () => Settings.makeSettingsDefault());\nnew Settings().switchers.forEach((button, index) => button.addEventListener('click', (e) => {\n  e.preventDefault();\n  console.log(new Settings().returnSettings());\n  Settings.switchSettings(button, index);\n}));\n\nnew Settings().clearResultsButton.addEventListener('click', () => Results.cleanResults());\n\n;// CONCATENATED MODULE: ./src/js/quiz.js\n\n\n\n\n\nconst preResults = [];\nlet containerQuestion;\n\nclass Quiz {\n  constructor(index) {\n    this.index = index;\n  }\n\n  async createQuiz() {\n    preResults[this.index] = [];\n    const indexCategory = this.index;\n    const indexQuestion = this.index * 10;\n    Interface.showQuestion(this.index);\n    Quiz.createQuestionContainer();\n    const questionText = Interface.createNodetoDom('h4', 'text-question');\n    questionText.innerText = await new Questions(indexQuestion).makeQuestion();\n    containerQuestion.append(questionText);\n    const imageOptionsContainer = Interface.createNodetoDom(\n      'div',\n      'container-question-image',\n    );\n    containerQuestion.append(imageOptionsContainer);\n    if (indexCategory < 12) {\n      const questionImage = new Image();\n      questionImage.src = new Questions(indexQuestion).getImageSrc();\n      questionImage.alt = '';\n      await questionImage.decode();\n      imageOptionsContainer.append(questionImage);\n      questionImage.className = 'image-question';\n      setTimeout(() => questionImage.classList.add('loaded'), 1000);\n    }\n    const containerOptions = Interface.createNodetoDom('div', 'container-options');\n    imageOptionsContainer.append(containerOptions);\n    const options = await new Questions(indexQuestion).makeOptions();\n    for (let i = 0; i < 4; i += 1) {\n      const questionOption = Interface.createNodetoDom('div', 'options');\n      if (indexCategory < 12) questionOption.innerText = options[i];\n      else {\n        const img = new Image();\n        img.src = `${options[i]}`;\n        img.alt = '';\n        img.onload = () => {\n          questionOption.append(img);\n          questionOption.classList.add('image-type-options');\n        };\n      }\n      containerOptions.append(questionOption);\n    }\n    containerOptions.addEventListener('click', async (e) => {\n      e.preventDefault();\n      await new Quiz(this.index).checkAnswer(e, indexQuestion);\n      Quiz.killTimer();\n    }, { once: true });\n    if (new Settings().returnSettings()['time-mode'] === 'true') { new Quiz(indexCategory).createTimer(indexQuestion); }\n    const gettedOptions = document.querySelectorAll('.options');\n    setTimeout(() => {\n      gettedOptions.forEach((item) => {\n        item.classList.add('loaded');\n      });\n    }, 500);\n  }\n\n  async checkAnswer(e, id) {\n    if (this.index > 11) {\n      if (e.target.src) {\n        if (+/\\d{1,3}.jpg/.exec(e.target.src)[0].slice(0, -4) === id) {\n          await new Quiz(this.index).informIsRight(e, id, 'right');\n        } else await new Quiz(this.index).informIsRight(e, id, 'wrong');\n      }\n    } else {\n      const rightAnswer = await new Questions(id).getRightAnswer();\n      if (e.target.innerText === rightAnswer) { await new Quiz(this.index).informIsRight(e, id, 'right'); } else await new Quiz(this.index).informIsRight(e, id, 'wrong');\n    }\n  }\n\n  async informIsRight(e, id, type) {\n    preResults[this.index].push(type);\n    Quiz.colorAnswer(e.target, type);\n    new Quiz(this.index).colorBullet(id, type);\n    await Quiz.playSoundEffect(type);\n    new Quiz(this.index).appearModal(type, id);\n    Quiz.deleteOptions();\n  }\n\n  async informIsRightByTimer(id, type) {\n    preResults[this.index].push(type);\n    new Quiz(this.index).colorBullet(id, type);\n    await Quiz.playSoundEffect(type);\n    new Quiz(this.index).appearModal(type, id);\n    Quiz.deleteOptions();\n  }\n\n  appearModal(type, id) {\n    setTimeout(() => {\n      new Quiz(this.index).makeRightAnswerModal(id, type);\n    }, 0);\n  }\n\n  async getNextQuestion(id) {\n    const index = id + 1;\n    Interface.eliminateModal();\n    if (index - this.index * 10 === 10) {\n      new Quiz(this.index).makeFinalModal();\n    } else {\n      Quiz.createOptions();\n      Quiz.changeQuestion(index);\n      Quiz.changeImage(index);\n      await new Quiz(this.index).changeOptions(index);\n      if (new Settings().returnSettings()['time-mode'] === 'true') { new Quiz(this.index).createTimer(index); }\n    }\n  }\n\n  async changeOptions(id) {\n    const options = await new Questions(id).makeOptions();\n    const questionOptions = document.querySelectorAll('.options');\n    const containerOptions = document.querySelector('.container-options');\n    for (let i = 0; i < 4; i += 1) {\n      if (this.index < 12) questionOptions.item(i).innerText = options[i];\n      else {\n        const img = new Image();\n        img.src = `${options[i]}`;\n        img.alt = '';\n        img.onload = () => {\n          questionOptions.item(i).append(img);\n          questionOptions.item(i).classList.add('image-type-options');\n        };\n      }\n    }\n    containerOptions.addEventListener('click', async (e) => {\n      await new Quiz(this.index).checkAnswer(e, id);\n      Quiz.killTimer();\n    }, { once: true });\n    setTimeout(() => {\n      questionOptions.forEach((item) => {\n        item.classList.add('loaded');\n      });\n    }, 500);\n  }\n\n  colorBullet(i, type) {\n    const bullets = document.querySelectorAll('.bullet');\n    const index = i - this.index * 10;\n    bullets.item(index).classList.add(type);\n  }\n\n  static colorAnswer(target, type) {\n    target.classList.add(type);\n    setTimeout(() => {\n      target.classList.remove(type);\n    }, 1000);\n  }\n\n  static deleteOptions() {\n    // const questionOptions = document.querySelectorAll('.options');\n    const containerOptions = document.querySelector('.container-options');\n    const containerImageQuestion = document.querySelector('.container-question-image');\n    containerImageQuestion.removeChild(containerOptions);\n  }\n\n  static createOptions() {\n    const containerOptions = Interface.createNodetoDom('div', 'container-options');\n    for (let i = 0; i < 4; i += 1) {\n      const questionOptions = Interface.createNodetoDom('div', 'options');\n      containerOptions.append(questionOptions);\n    }\n    const containerImageQuestion = document.querySelector('.container-question-image');\n    containerImageQuestion.append(containerOptions);\n  }\n\n  static async changeQuestion(id) {\n    const questionText = document.querySelector('.text-question');\n    questionText.innerText = await new Questions(id).makeQuestion();\n  }\n\n  static changeImage(id) {\n    if (id < 120) {\n      const questionImage = document.querySelector('.image-question');\n      questionImage.classList.remove('loaded');\n      questionImage.src = new Questions(id).getImageSrc();\n      questionImage.onload = () => {\n        questionImage.classList.add('loaded');\n      };\n    }\n  }\n\n  static createQuestionContainer() {\n    containerQuestion = Interface.createNodetoDom('div', 'container-question');\n    new Interface().game.append(containerQuestion);\n    const containerBullets = Interface.createNodetoDom('div', 'bullets');\n    for (let i = 0; i < 10; i += 1) {\n      const bullet = Interface.createNodetoDom('div', 'bullet');\n      containerBullets.append(bullet);\n    }\n    containerQuestion.append(containerBullets);\n  }\n\n  static async playSoundEffect(type) {\n    if (new Settings().returnSettings()['sound-mode'] === 'true') {\n      const audio = document.querySelector('.audio-sound');\n      audio.src = `./assets/sounds/${type}.mp3`;\n      audio.volume = new Settings().range[0].value / 100;\n      await audio.play();\n      audio.removeAttribute('src');\n    }\n  }\n\n  static setResultsToLocalStorage() {\n    const results = Results.returnResults();\n    localStorage.setItem('resultsRubiaqute', JSON.stringify(results));\n  }\n\n  writeResult() {\n    if (preResults[this.index].length === 10) {\n      new Results(this.index).changeResults(preResults[this.index]);\n    }\n    Quiz.setResultsToLocalStorage();\n  }\n\n  async countTimer(seconds, id) {\n    const timer = document.querySelector('.timer');\n    let secondsLeft = seconds;\n    let timerBlock;\n    const timerPlay = () => {\n      timerBlock = setInterval(async () => {\n        if (!document.querySelector('.timer')) clearInterval(timerBlock);\n        else {\n          secondsLeft -= 1;\n          if (secondsLeft < 0) {\n            clearInterval(timerBlock);\n            await new Quiz(this.index).informIsRightByTimer(id, 'wrong');\n            Quiz.killTimer();\n          } else if (secondsLeft < 10) {\n            timer.innerText = `00:0${secondsLeft}`;\n          } else timer.innerText = `00:${secondsLeft}`;\n        }\n      }, 1000);\n    };\n    timerPlay();\n  }\n\n  static killTimer() {\n    const timer = document.querySelector('.timer');\n    if (timer) containerQuestion.removeChild(timer);\n  }\n\n  createTimer(indexQuestion) {\n    const timer = Interface.createNodetoDom('span', 'timer');\n    containerQuestion.append(timer);\n    const timeLeft = new Settings().returnSettings()['time-left'];\n    new Quiz(this.index).countTimer(timeLeft, indexQuestion);\n  }\n\n  async makeRightAnswerModal(id, type) {\n    let template = '';\n    const imageSrc = new Questions(id).getImageSrc();\n    const author = await new Questions(id).getAuthor();\n    const name = await new Questions(id).getName();\n    const year = await new Questions(id).getYear();\n    const containerAnswer = Interface.createNodetoDom('div', 'container-answer');\n    const imageAnswer = new Image();\n    imageAnswer.src = `${imageSrc}`;\n    imageAnswer.alt = '';\n    await imageAnswer.decode();\n    containerAnswer.append(imageAnswer);\n    imageAnswer.className = 'image-answer';\n    template += '<div class=\"container-description\">';\n    template += `<p class=\"description\">${author}</p>`;\n    template += `<p class=\"description\">\"${name}\"</p>`;\n    template += `<p class=\"description\">${year}</p>`;\n    template += '</div>';\n    containerAnswer.insertAdjacentHTML('beforeend', template);\n    const modalPage = await Interface.createModalWrapper();\n    modalPage.append(containerAnswer);\n    modalPage.insertAdjacentHTML('afterbegin', `<div class=\"icon-${type}\"></div>`);\n    modalPage.insertAdjacentHTML('beforeend', `<p class=\"note\">You're ${type}!</p>`);\n    modalPage.insertAdjacentHTML('beforeend', '<button class=\"next-question\">Next</button>');\n    const nextButton = document.querySelector('.next-question');\n    nextButton.addEventListener('click', () => new Quiz(this.index).getNextQuestion(id));\n  }\n\n  replayLevel() {\n    Interface.eliminateModal();\n    Interface.eliminateQuizPage();\n    new Quiz(this.index).writeResult();\n    new Quiz(this.index).updateCategory();\n    new Quiz(this.index).createQuiz();\n  }\n\n  finishLevel() {\n    Interface.eliminateModal();\n    if (this.index > 11) Interface.showCategories('paintings');\n    else Interface.showCategories('artists');\n    new Quiz(this.index).writeResult();\n    new Quiz(this.index).updateCategory();\n  }\n\n  updateCategory() {\n    const categories = document.querySelectorAll('.category');\n    const category = categories.item(this.index);\n    const categoryNumber = Interface.createNodetoDom('div', 'number');\n    if (this.index < 12) categoryNumber.innerText = this.index + 1;\n    else categoryNumber.innerText = this.index + 1 - 12;\n    const categoryImage = category.querySelector('.category-image');\n    categoryImage.classList.remove('not-colored');\n    if (category.querySelector('div', 'score')) { category.removeChild(category.querySelector('div', 'score')); }\n    const categoryResult = Interface.createNodetoDom('div', 'score');\n    const score = new Results(this.index)\n      .checkResults()\n      .filter((el) => el === 'right').length;\n    if (score === 10) categoryResult.classList.add('best-score');\n    categoryResult.innerHTML = `<p>${score}/10</p><p>see results<p>`;\n    category.append(categoryResult, categoryNumber);\n    categoryResult.addEventListener('click', () => {\n      Interface.showQuestion(this.index);\n      new Results(this.index).makeResultsPage();\n    });\n  }\n\n  async makeFinalModal() {\n    let template = '';\n    const modalPage = await Interface.createModalWrapper();\n    const rightBullets = document.querySelectorAll('.bullet.right');\n    const score = rightBullets.length;\n    modalPage.insertAdjacentHTML('beforeend', `<p class=\"note\">Your score: <span>${score}/10</span></p>`);\n    const finalImage = new Image();\n    finalImage.alt = '';\n    if (score === 10) {\n      finalImage.src = './assets/image-data/younglady.jpg';\n      template += '<p class=\"note-result\">You are the BEST!</p>';\n      await Quiz.playSoundEffect('finish-right');\n    } else {\n      finalImage.src = './assets/image-data/oldlady.jpg';\n      template += '<p class=\"note-result\">Try better next time...</p>';\n      await Quiz.playSoundEffect('finish-wrong');\n    }\n    template\n      += '<button class=\"final-modal-button play-again\">&#8634; Once again</button>';\n    template += '<button class=\"final-modal-button resume\">Resume</button>';\n    await finalImage.decode();\n    modalPage.append(finalImage);\n    finalImage.className = 'image-result';\n    modalPage.insertAdjacentHTML('beforeend', template);\n    const playAgainButton = document.querySelector('.play-again');\n    playAgainButton.addEventListener('click', () => new Quiz(this.index).replayLevel());\n    const resumeButton = document.querySelector('.resume');\n    resumeButton.addEventListener('click', () => new Quiz(this.index).finishLevel());\n  }\n}\n\n;// CONCATENATED MODULE: ./src/js/categories.js\n\n\n\nclass Category {\n  constructor(index, mode) {\n    this.index = index;\n    this.mode = mode;\n  }\n\n  fillCategory() {\n    const category = Interface.createNodetoDom('div', 'category');\n    const categoryNumber = Interface.createNodetoDom('div', 'number');\n    categoryNumber.innerText = this.index + 1 - this.mode;\n    const categoryImage = Interface.createNodetoDom('img', 'category-image not-colored');\n    categoryImage.src = `./assets/image-data/img/${this.index * 10}.jpg`;\n    category.append(categoryNumber, categoryImage);\n    categoryImage.addEventListener('click', () => {\n      new Quiz(this.index).createQuiz();\n    });\n    return category;\n  }\n\n  makeCategoryWrapper(sectionCategory) {\n    new Interface().game.append(sectionCategory);\n    const categoryHeader = document.createElement('h3');\n    categoryHeader.innerText = 'Choose round:';\n    sectionCategory.append(categoryHeader);\n\n    const containerCategory = Interface.createNodetoDom('div', 'categories_container');\n    sectionCategory.append(containerCategory);\n    const category = [];\n    for (let i = this.mode; i < 12 + this.mode; i += 1) {\n      category[i] = new Category(i, this.mode).fillCategory();\n      containerCategory.append(category[i]);\n    }\n  }\n\n  createCategoryPage(type) {\n    const sectionCategory = Interface.createNodetoDom(\n      'div',\n      `categories ${type} hidden visually-hidden`,\n    );\n    new Category('', this.mode).makeCategoryWrapper(sectionCategory);\n  }\n}\n\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(379);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(795);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(569);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(565);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(216);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(589);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/resolve-url-loader/index.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[3]!./src/sass/style.scss\nvar style = __webpack_require__(21);\n;// CONCATENATED MODULE: ./src/sass/style.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\n\n      options.insert = insertBySelector_default().bind(null, \"head\");\n    \noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(style/* default */.Z, options);\n\n\n\n\n       /* harmony default export */ const sass_style = (style/* default */.Z && style/* default.locals */.Z.locals ? style/* default.locals */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\nasync function getSettingsfromLocalStorage() {\n  if (localStorage.getItem('settingsRubiaqute')) {\n    const settings = JSON.parse(localStorage.getItem('settingsRubiaqute'));\n    await Settings.rewriteSettings(settings);\n  } else {\n    await Settings.rewriteSettings(new Settings().settingsDefault);\n    Settings.setSettingstoLocalStorage();\n  }\n  Settings.updateSettingsPage();\n  console.log(new Settings().returnSettings());\n}\nwindow.onload = async () => {\n  await getSettingsfromLocalStorage();\n  document.addEventListener('click', () => Settings.playMusic(), { once: true });\n};\n\nwindow.addEventListener('load', async () => {\n  new Category('', 0).createCategoryPage('artists');\n  new Category('', 12).createCategoryPage('paintings');\n  for (let i = 0; i < 24; i += 1) {\n    if (new Results(i).checkResults()) {\n      new Quiz(i).updateCategory();\n    }\n  }\n});\n\n// document.addEventListener('click', () => Settings.playMusic(), { once: true });\n\n\n//# sourceURL=webpack://art-quiz/./src/index.js_+_7_modules?")},917:(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = __webpack_require__.p + "8106a7202944f40f2687.jpg";\n\n//# sourceURL=webpack://art-quiz/./src/assets/image-data/cover.jpg?')},197:(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = __webpack_require__.p + "53ede9bb0c88ea9e0d0e.svg";\n\n//# sourceURL=webpack://art-quiz/./src/assets/image-data/svg/Group_1438.svg?')},519:(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = __webpack_require__.p + "30f368b1a3dc38af782b.svg";\n\n//# sourceURL=webpack://art-quiz/./src/assets/image-data/svg/checkmark.svg?')},76:(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = __webpack_require__.p + "e55f86f4faae58198442.svg";\n\n//# sourceURL=webpack://art-quiz/./src/assets/image-data/svg/cross.svg?')},195:(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = __webpack_require__.p + "9da5502c5fe48dd9662d.svg";\n\n//# sourceURL=webpack://art-quiz/./src/assets/image-data/svg/home.svg?')},873:(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = __webpack_require__.p + "b635312fb571d895f0cd.svg";\n\n//# sourceURL=webpack://art-quiz/./src/assets/image-data/svg/list.svg?')},953:(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = __webpack_require__.p + "5b614cfea39c6b48164c.svg";\n\n//# sourceURL=webpack://art-quiz/./src/assets/image-data/svg/settings.svg?')},856:(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = __webpack_require__.p + "88c414daee7dbb079f90.svg";\n\n//# sourceURL=webpack://art-quiz/./src/assets/image-data/svg/volume-medium.svg?')}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={id:e,exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;__webpack_require__.g.importScripts&&(e=__webpack_require__.g.location+"");var n=__webpack_require__.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var t=n.getElementsByTagName("script");t.length&&(e=t[t.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=e})(),__webpack_require__.b=document.baseURI||self.location.href;var __webpack_exports__=__webpack_require__(706)})();